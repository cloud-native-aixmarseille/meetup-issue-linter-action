name: Internal - Tests for action

on:
  workflow_call:

permissions:
  contents: read
  issues: write

env:
  TEST_VALID_ISSUE_NUMBER: "6" # This issue number should be valid
  TEST_INVALID_ISSUE_NUMBER: "11" # This issue number should be valid

jobs:
  test-action-with-valid-issue:
    runs-on: ubuntu-latest
    name: Test with valid issue
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - id: get-issue-body
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: process.env.TEST_VALID_ISSUE_NUMBER
            });

            core.setOutput('issue-body', issue.data.body);

      - name: Parse Issue
        id: parser
        uses: issue-ops/parser@76d5aa095754de1493cbe41934484c4287e16350 # v4.2.0
        with:
          body: ${{ steps.get-issue-body.outputs.issue-body }}
          issue-form-template: ../../__tests__/meetup-issue-template.yml

      - name: Act
        id: act
        uses: ./
        with:
          issue-number: ${{ env.TEST_VALID_ISSUE_NUMBER }}
          issue-parsed-body: ${{ steps.parser.outputs.json }}
          hosters: '[{"name": "Hoster Test One", "url": "https://example.com/hoster1"}, {"name": "Hoster Test Two", "url": "https://example.com/hoster2"}]'
          speakers: '[{"name": "Speaker One", "url": "https://example.com/speaker1"}, {"name": "Speaker Two", "url": "https://example.com/speaker2"}]'
          should-fix: false
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Assert
        run: |
          if [[ "${{ steps.act.outputs.lint-issues }}" != "" ]]; then
            echo "The action did not return an empty list of issues"
            exit 1
          fi

  test-action-with-invalid-issue:
    runs-on: ubuntu-latest
    name: Test with invalid issue
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - id: get-issue-body
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: process.env.TEST_INVALID_ISSUE_NUMBER
            });

            core.setOutput('issue-body', issue.data.body);

      - name: Parse Issue
        id: parser
        uses: issue-ops/parser@76d5aa095754de1493cbe41934484c4287e16350 # v4.2.0
        with:
          body: ${{ steps.get-issue-body.outputs.issue-body }}
          issue-form-template: ../../__tests__/meetup-issue-template.yml

      - name: Act
        id: act
        uses: ./
        with:
          issue-number: ${{ env.TEST_INVALID_ISSUE_NUMBER }}
          issue-parsed-body: ${{ steps.parser.outputs.json }}
          hosters: '[{"name": "Hoster Test One", "url": "https://example.com/hoster1"}, {"name": "Hoster Test Two", "url": "https://example.com/hoster2"}]'
          speakers: '[{"name": "Speaker One", "url": "https://example.com/speaker1"}, {"name": "Speaker Two", "url": "https://example.com/speaker2"}]'
          should-fix: false
          fail-on-error: false
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Assert
        run: |
          LINT_ISSUES=$(cat <<EOF
          ${{ steps.act.outputs.lint-issues }}
          EOF
          )

          EXPECTED_LINT_ISSUES=$(cat <<EOF
          Title: Invalid, expected "[Meetup] - 2025-01-01 - Test Invalid Issue"
          Hoster: "Wrong Hoster" is not an existing hoster
          Event Description: Invalid input: expected string, received undefined
          Agenda: Speaker "Wrong Speaker" is not in the list of speakers
          Agenda: Entry "- Wrong agenda entry" must follow the format: "- <speaker(s)>: <talk_description>"
          Meetup Link: Must be a valid Meetup link, e.g. https://www.meetup.com/cloud-native-aix-marseille/events/123456789
          CNCF Link: Must be a valid CNCF link, e.g. https://community.cncf.io/events/details/cncf-cloud-native-aix-marseille-presents-test-meetup-event
          Drive Link: Must be a valid Drive Link, e.g. https://drive.google.com/drive/folders/1a2b3c4d5e6f7g8h9i0j
          Labels: Missing label(s) "hoster:confirmed"
          EOF
          )

          if ! diff --color <(echo "${LINT_ISSUES}") <(echo "${EXPECTED_LINT_ISSUES}"); then
            echo -e "The action did not return the expected list of issues"
            exit 1
          fi
